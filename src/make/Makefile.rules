#
# * 32bitmicro Makefile rules
# * $URL$
# * $ID$
#
#Copyright (c) 2009-2010, 32bitmicro
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation 
#and/or other materials provided with the distribution.
#Neither the name of the 32bitmicro nor the names of its contributors may be used to endorse or promote products derived from this software without 
#specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
#BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
#NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ifndef 32BITMICRO
${error 32BITMICRO is not defined!}
endif

ifndef HOST_OS
${error HOST_OS is not defined!}
endif
include $(32BITMICRO)/src/make/Makefile.${HOST_OS}

ifndef TARGET_MCU
${error TARGET_MCU is not defined!}
endif
include $(32BITMICRO)/src/make/Makefile.${TARGET_MCU}

ifndef TARGET_BOARD
TARGET_BOARD=
else
include $(32BITMICRO)/src/make/Makefile.${TARGET_BOARD}
endif

ifndef TARGET_CLOCK
TARGET_CLOCK=
${warning TARGET_CLOCK is not defined!}
endif

ifndef TARGET_OS
  ${error TARGET_OS is not defined!}
endif

ifndef TARGET_LIBC
TARGET_LIBC=default
endif

ifndef TARGET_STARTUP
TARGET_STARTUP=default
endif

.SUFFIXES:
ifndef TARGET_SDK
${error TARGET_SDK is not defined!}
else
include $(32BITMICRO)/src/make/Makefile.${TARGET_SDK}
endif


ifndef TARGET_SDK_OUT
OUT=out
else
OUT=${TARGET_SDK_OUT}
endif

ifndef PROJECT
  ${error PROJECT is not defined!}
endif

ifndef PROJECT_TYPE
${error PROJECT_TYPE is not defined!}
endif


# Object files
NOCPPASRC=$(filter %.s, $(ASRC))
AOBJ     =$(patsubst %.s,%.o,$(NOCPPASRC))
CPPASRC  =$(filter %.S, $(ASRC))
AOBJ    +=$(patsubst %.S,%.o,$(CPPASRC))
COBJ     =$(patsubst %.c,%.o,$(CSRC))
CPPOBJ   =$(patsubst %.cpp,%.o,$(CPPSRC))

# List files
AOBJ_LST =$(patsubst %.o,%.o.lst,$(AOBJ))
COBJ_LST =$(patsubst %.o,%.o.lst,$(COBJ))

# Source files
ALL_ASRC    =${ASRC}
ALL_CSRC    =${CSRC}
ALL_CPPSRC  =${CPPSRC}
ALL_AFLAGS  =${TARGET_SDK_AFLAGS}   ${AFLAGS}
ALL_CFLAGS  =${TARGET_SDK_CFLAGS}   ${CFLAGS}
ALL_CPPFLAGS=${TARGET_SDK_CPPFLAGS} ${CPPFLAGS}
ALL_LDFLAGS =${TARGET_SDK_LDFLAGS}  ${LDFLAGS}
ALL_LIBS    =${TARGET_SDK_LIBS}     ${LIBS}

ifdef ADD_CMSIS
include $(32BITMICRO)/src/make/Makefile.${ADD_CMSIS}
ALL_ASRC    +=${CMSIS_ASRC}
ALL_CSRC    +=${CMSIS_CSRC}
ALL_AFLAGS  +=${CMSIS_AFLAGS}
ALL_CFLAGS  +=${CMSIS_CFLAGS}
ALL_CPPFLAGS+=${CMSIS_CPPFLAGS}
ALL_LDFLAGS +=${CMSIS_LDFLAGS}
ALL_LIBS    +=${CMSIS_LIBS}
endif

# Linker script
ifdef TARGET_LDSCRIPT
ALL_LDFLAGS+=${TARGET_LDSCRIPT}
else
ifdef TARGET_SDK_LDSCRIPT
ALL_LDFLAGS+=${TARGET_SDK_LDSCRIPT}
endif
endif

# Object files
NOCPP_ALL_ASRC=$(filter %.s, $(ALL_ASRC))
ALL_AOBJ      =$(patsubst %.s,%.o,$(NOCPP_ALL_ASRC))
CPP_ALL_ASRC  =$(filter %.S, $(ALL_ASRC))
ALL_AOBJ     +=$(patsubst %.S,%.o,$(CPP_ALL_ASRC))
ALL_COBJ      =$(patsubst %.c,%.o,$(ALL_CSRC))
ALL_CPPOBJ    =$(patsubst %.cpp,%.o,$(ALL_CPPSRC))
ALL_OBJ       =${ALL_AOBJ}
ALL_OBJ      +=${ALL_COBJ}
ALL_OBJ      +=${ALL_CPPOBJ}
ALL_AOBJ_LST  =$(patsubst %.o,%.o.lst,$(ALL_AOBJ))
ALL_COBJ_LST  =$(patsubst %.o,%.o.lst,$(ALL_COBJ))
ALL_CPPOBJ_LST=$(patsubst %.o,%.o.lst,$(ALL_CPPOBJ))
ALL_OBJ_LST   =$(patsubst %.o,%.o.lst,$(ALL_OBJ))
ALL_AOBJ_SYM  =$(patsubst %.o,%.o.sym,$(ALL_AOBJ))
ALL_COBJ_SYM  =$(patsubst %.o,%.o.sym,$(ALL_COBJ))
ALL_CPPOBJ_SYM=$(patsubst %.o,%.o.sym,$(ALL_CPPOBJ))
ALL_OBJ_SYM   =$(patsubst %.o,%.o.sym,$(ALL_OBJ))

PROJECT_OUT=

# Poject output
ifeq ($(PROJECT_TYPE),APP)
PROJECT_OUT=${PROJECT}.${OUT}
${PROJECT}.${OUT} : ${ALL_OBJ}
	$(LD)  ${ALL_LDFLAGS}  ${ALL_OBJ} ${ALL_LIBS} -o ${PROJECT}.${OUT}
# BIN output
ifdef TARGET_GEN_BIN
	$(GEN_BIN_CMD)
#	$(OBJCOPY) -O binary ${PROJECT}.${OUT}   ${PROJECT}.${OUT}.bin
endif
# HEX output
ifdef TARGET_GEN_HEX
	$(GEN_HEX_CMD)
#	$(OBJCOPY) -O ihex   ${PROJECT}.${OUT}   ${PROJECT}.${OUT}.hex
endif
# symbols
ifdef TARGET_GEN_SYM
	$(GEN_SYM_CMD)
#	$(OBJDUMP)  -t       ${PROJECT}.${OUT}  > ${PROJECT}.${OUT}.sym
endif
# listing
ifdef TARGET_GEN_LST
	$(GEN_LST_CMD)
#	$(OBJDUMP)  -S -D    ${PROJECT}.${OUT}  > ${PROJECT}.${OUT}.lst
endif
endif

ifeq ($(PROJECT_TYPE),LIB)
PROJECT_OUT=lib${PROJECT}.a
lib${PROJECT}.a: ${ALL_OBJ}
	$(AR) r lib${PROJECT}.a ${ALL_OBJ}
endif


# Project
${PROJECT}: ${ALL_OBJ} ${PROJECT_OUT}


clean_aobj:
	-$(RM) -f ${AOBJ}
	-$(RM) -f ${AOBJ_LST}
	-$(RM) -f ${AOBJ_SYM}

clean_cobj:
	-$(RM) -f ${COBJ}
	-$(RM) -f ${COBJ_LST}
	-$(RM) -f ${COBJ_SYM}

clean_cppobj:
	-$(RM) -f ${CPPOBJ}
	-$(RM) -f ${CPPOBJ_LST}
	-$(RM) -f ${CPPOBJ_SYM}

clean_obj: clean_aobj clean_cobj clean_cppobj 


clean_all_aobj:
	-$(RM) -f ${ALL_AOBJ}
	-$(RM) -f ${ALL_AOBJ_LST}
	-$(RM) -f ${ALL_AOBJ_SYM}

clean_all_cobj:
	-$(RM) -f ${ALL_COBJ}
	-$(RM) -f ${ALL_COBJ_LST}
	-$(RM) -f ${ALL_COBJ_SYM}


clean_all_cppobj:
	-$(RM) -f ${ALL_CPPOBJ}
	-$(RM) -f ${ALL_CPPOBJ_LST}
	-$(RM) -f ${ALL_CPPOBJ_SYM}

clean_all_obj: clean_all_aobj clean_all_cobj clean_all_cppobj

clean: clean_all_obj clean_project
	-$(RM) -f ${PROJECT_OUT}
	-$(RM) -f ${PROJECT_OUT}.bin
	-$(RM) -f ${PROJECT_OUT}.hex
	-$(RM) -f ${PROJECT_OUT}.lst
	-$(RM) -f ${PROJECT_OUT}.sym
	-$(RM) -f ${PROJECT_OUT}.map


# Phony targets
.PHONY : help


# Echo targets
list:
	@echo "$(.VARIABLES)" 


echo_sdk_asrc:
	@echo "TARGET_SDK_ASRC :"
	@echo ${TARGET_SDK_ASRC}

echo_sdk_csrc:
	@echo "TARGET_SDK_CSRC :"
	@echo ${TARGET_SDK_CSRC}

echo_sdk_src: echo_sdk_asrc echo_sdk_csrc

#.PHONY : echo_src echo_asrc echo_csrc

echo_asrc:
	@echo "ASRC :"
	@echo ${ASRC}

echo_csrc:
	@echo "CSRC :"
	@echo ${CSRC}

echo_src: echo_asrc echo_csrc

#.PHONY : echo_src echo_asrc echo_csrc
	


echo_all_asrc:
	@echo "ALL_ASRC :"
	@echo ${ALL_ASRC}

echo_all_csrc:
	@echo "ALL_CSRC :"
	@echo ${ALL_CSRC}

echo_all_cppsrc:
	@echo "ALL_CPPSRC :"
	@echo ${ALL_CPPSRC}

echo_all_src: echo_all_asrc echo_all_csrc echo_all_cppsrc 


echo_aobj:
	@echo "AOBJ :"
	@echo ${AOBJ}

echo_cobj:
	@echo "COBJ :"
	@echo ${COBJ}

echo_cppobj:
	@echo "CPPOBJ :"
	@echo ${CPPOBJ}

echo_obj: echo_aobj echo_cobj echo_cppobj
	
echo_all_aobj:
	@echo "ALL_AOBJ :"
	@echo ${ALL_AOBJ}

echo_all_cobj:
	@echo "ALL_COBJ :"
	@echo ${ALL_COBJ}

echo_all_cppobj:
	@echo "ALL_CPPOBJ :"
	@echo ${ALL_CPPOBJ}

echo_all_obj: echo_all_aobj echo_all_cobj echo_all_cppobj 
	@echo "ALL_OBJ :"
	@echo ${ALL_OBJ}

#.PHONY : echo_src echo_asrc echo_csrc

echo_aflags:
	@echo "AFLAGS            : "${AFLAGS}
	
echo_cflags:
	@echo "CFLAGS            : "${CFLAGS}

echo_cppflags:
	@echo "CPPFLAGS          : "${CPPFLAGS}

echo_ldflags:
	@echo "LDFLAGS           : "${LDFLAGS}

echo_libs:
	@echo "LIBS              : "${LIBS}

echo_flags: echo_aflags echo_cflags echo_ldflags
	
.PHONY : echo_flags echo_aflags echo_cflags echo_ldflags echo_libs

echo_target_libc_aflags:
	@echo "TARGET_LIBC_AFLAGS        : "${TARGET_LIBC_AFLAGS}
	
echo_target_libc_cflags:
	@echo "TARGET_LIBC_CFLAGS        : "${TARGET_LIBC_CFLAGS}

echo_target_libc_ldflags:
	@echo "TARGET_LIBC_LDFLAGS       : "${TARGET_LIBC_LDFLAGS}

echo_target_libc_libs:
	@echo "TARGET_LIBC_LIBS          : "${TARGET_LIBC_LIBS}

echo_target_libc_flags: echo_target_libc_aflags echo_target_libc_cflags echo_target_libc_ldflags echo_target_libc_libs
	
.PHONY : echo_target_libc_flags echo_target_libc_aflags echo_target_libc_cflags echo_target_libc_ldflags

echo_target_sdk_aflags:
	@echo "TARGET_SDK_AFLAGS        : "${TARGET_SDK_AFLAGS}
	
echo_target_sdk_cflags:
	@echo "TARGET_SDK_CFLAGS        : "${TARGET_SDK_CFLAGS}

echo_target_sdk_ldflags:
	@echo "TARGET_SDK_LDFLAGS       : "${TARGET_SDK_LDFLAGS}

echo_target_sdk_libs:
	@echo "TARGET_SDK_LIBS          : "${TARGET_SDK_LIBS}

echo_target_sdk_flags: echo_target_sdk_aflags echo_target_sdk_cflags echo_target_sdk_ldflags
	
.PHONY : echo_target_sdk_flags echo_target_sdk_aflags echo_target_sdk_cflags echo_target_sdk_ldflags echo_target_sdk_libs
	
echo_all_aflags:
	@echo "ALL_AFLAGS               : "${ALL_AFLAGS}
	
echo_all_cflags:
	@echo "ALL_CFLAGS               : "${ALL_CFLAGS}

echo_all_ldflags:
	@echo "ALL_LDFLAGS              : "${ALL_LDFLAGS}

echo_all_libs:
	@echo "ALL_LIBS                 : "${ALL_LIBS}

echo_all_flags: echo_all_aflags echo_all_cflags echo_all_ldflags
	
.PHONY : echo_all_flags echo_all_aflags echo_all_cflags echo_all_ldflags echo_all_libs



echo_32bitmicro:
	@echo "32BITMICRO        : "${32BITMICRO}
.PHONY : echo_32bitmicro

echo_project:
	@echo "PROJECT           : "${PROJECT}
	@echo "PROJECT_TYPE      : "${PROJECT_TYPE}
.PHONY : echo_project

echo_target:
	@echo "TARGET            : "${TARGET}
	@echo "TARGET_SERIES     : "${TARGET_SERIES}
	@echo "TARGET_FAMILY     : "${TARGET_FAMILY}
	@echo "TARGET_CORE       : "${TARGET_CORE}
	@echo "TARGET_COREREV    : "${TARGET_COREREV}
	@echo "TARGET_MCU        : "${TARGET_MCU}
	@echo "TARGET_CLOCK      : "${TARGET_CLOCK}
	@echo "TARGET_ARCH       : "${TARGET_ARCH}
	@echo "TARGET_CODE_MODE  : "${TARGET_CODE_MODE}
	@echo "TARGET_OS         : "${TARGET_OS}
	@echo "TARGET_BOARD      : "${TARGET_BOARD}
.PHONY : echo_target

echo_target_sdk:
	@echo "TARGET_SDK        : "${TARGET_SDK}
	@echo "TARGET_SDK_ROOT   : "${TARGET_SDK_ROOT}
	@echo "TARGET_PREFIX     : "${TARGET_PREFIX}
	@echo "TARGET_LIBC       : "${TARGET_LIBC}
	@echo "TARGET_STARTUP    : "${TARGET_STARTUP}
	@echo "AR                : "${AR}
	@echo "AS                : "${AS}
	@echo "CC                : "${CC}
	@echo "CXX               : "${CXX}
	@echo "LD                : "${LD}
	@echo "NM                : "${NM}
	@echo "OBJCOPY           : "${OBJCOPY}
	@echo "OBJDUMP           : "${OBJDUMP}
	@echo "RANLIB            : "${RANLIB}
	@echo "STRIP             : "${STRIP}
.PHONY : echo_target_sdk


echo:	echo_32bitmicro echo_project echo_target echo_target_sdk
.PHONY : echo


help_echo:
	@echo "32BITMICRO make help_echo"
	@echo "make echo            - print      configuration"
	@echo "make echo_32bitmicro - 32bitmicro configuration"
	@echo "make echo_project    - project    configuration"
	@echo "make echo_target     - target     configuration"
	@echo "make echo_target_sdk - target sdk configuration"
#.PHONY : help_echo
	
help:
	@echo "32BITMICRO make help"
	@echo "make echo      - print configuration"
	@echo "make help_echo - echo help"


